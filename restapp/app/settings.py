"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Auth user 
AUTH_USER_MODEL = 'user.User'


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-*3s$eveei#e30#9h_+nmunvp06rr(6ufc^p&c5ppw)o_07a)@@"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "blog",
    "user",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"

# 이 앱이 REST Framework을 써서 rest api 서버라는걸 알려줌, 그리고 쓰로틀링 설정
# REST Framework
REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_CLASS': {
        'rest_framework.throttling.AnonRateThrottle', # 로그인 안한애
        'rest_framework.throttling.UserRateThrottle',
    },
    'DEFAULT_THROTTLE_RATES': {
        'anon':'5/hour', # sec, min, hour, day
        'user':'20/hour',
    },
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# SESSION
# 세션 관련해서 어떤 세션 엔진을 사용할 것인지.
# 일반적으로 서버에서 세션을 저장할때 database에 저장합니다.
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# 세션의 유지기간
SESSION_COOKIE_AGE = 86400 # 하루 = 24h * 60m * 60s -> client(browser)

# 사용자가 브라우저 종료 시 세션을 없앨 건지. Ture면 닫을때 세션 삭제
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# server session > client session_id. 세션이 만료가 되어도 db에 저장된 세션은 사라지지않습니다. 이런 세션들이 마구 쌓이면 부하가 걸릴 것입니다. 
# 그래서 서버 쪽에서 세션을 지워줄 필요가 있습니다.
# 근데 만료된것만 지우는게 아니라 다 삭제됨
# python manage.py clearsessions -> corn (crontab) : 스케쥴 설정 가능

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

# 다국가 언어코드 사용
USE_I18N = True

USE_TZ = True

# LANGUAGES = [
#     ('kr', 'Korean'),
#     ('en', 'English'),
# ]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = "static/" # 이거는 app 폴더 안에 static/폴더
STATIC_URL =  "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Media files
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'